<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAei0AAHowAAB8MgAAfTUAAH44AABzOAgAfUAAAHpLAAB8VwIAel4BAGlrAABrbQAAdmwAAH1v
        CgBvcQAAcHIAAHJ0AAB1dgAAenUAAHV4AAB1fAAAdngFAHh5BwB4egsAeXsNAHt9DABidRkAbEkuAGd6
        IwBaW14ATn5kAFB/ZQCBNwAAhjYAAIA6AACFOAAAgTwDAIE8BACAPQ4AgEABAIRACQCEQA8Ah0UOAIhG
        EACKSBMAjUsaAIhRIwCTVyUAjmIjAJlhMgCbZTkAlXExAKFsQQChbUYAo3JKAK18WgBqhU0AgYQWAIOF
        GwCDhR0Ah4AgAIaJJQCIiiMAiIslAIqMKACKjSwAj5I0AJKSMACUljsAk5U8AJiaQgCqgV0AtIRZAJ6g
        TQChpFUAoqRYAKWmWQClqFkAr4VmALCFYAC2jm0Ar7JuADl9igAwebwARmuQAD+BjQA7gJQALoGuAEaE
        jQBwoqkAbaW9AHutvwAght0AEoDjABWB4wAahOMAHYXjABqE5wAdhuQAF4XpABGC7gAUhe8AGIXqABiG
        7wAfiOkAG4nsAB6J7gAQhvAAFYbxAByJ8gAiiOIAJYvmACmM5AAsjuUAK4/qADeQ4AA/mecAMJPwAD6b
        9ABLm9cAQZbZAFmY0ABbqOoAXqrqAFuq8wBqsOsAc7XsAHS79wCBwPMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsbGxsAAAAAAAAAAAEBAQEAAAAAAAAAAAAAAAAAAAAAABe
        YWwAAAAAAAAAAAQEBAAAAAAAAAAAAAAAAAAAAAAAAHNhYQAAAAAAAAAABAQEAAAAAAAAAAAAAAAAAAAA
        AAAAbGxsbAAAAAAAAAQEBAQAAAAAAAAAAAAAAAAAAAwMDBMgbmtYEAwMDAwMDAwMDAwMAAAAAAAAAAAA
        DBAQEBAQEBtda28MDAwMDAwMDAwMDAwMDAwMAAAADAwMDAwMDAwMAGxsbGwAAAAANAgJCg4MDAwMDAwM
        DAAMDAwMDAwAAAAAbGxsbAAAAAAEBAQBAAAADAwMDAwMDAAMDAwMAAAAAAAAY2NxAAAAAAQEBAQAAAAA
        DAwMDAwAAAAADAwMDAAAAABsbGwAAAAABAQEBAAAAAAMDAAAAAAAAAAAAAAMDAwMDAwgU1oAAAQEBAQA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxsbAAABAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdmxnAAAE
        BAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsbF5sAAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABs
        aWwEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxsbAUjIwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAbGxsBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbB4EBAQEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABsBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwEBAQEAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP////////////////////////////////8P8P//j/H//4/x//+H4f/4AAB/wAAABwBD
        wAEDw8OAh+PDweHjw8/8AYf///GH///xh///8If///gP///4D///+A////wP///8H////B////4f////
        ////////////////////////
</value>
  </data>
</root>